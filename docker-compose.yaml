services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"  # Kafka broker
      - "9093:9093"  # Controller listener
      - "9094:9094"  # External access for clients
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker  # Enable controller and broker roles
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093  # Controller quorum voter
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094  # Define listeners
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094  # Advertised listeners
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER  # Only the controller listener name
      - KAFKA_CFG_LISTENER_NAME_EXTERNALEXTERNAL:PLAINTEXT  # Expose EXTERNAL listener for clients
      - KAFKA_KRAFT_MODE=true  # Enable KRaft mode (no Zookeeper)
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7.4.1-alpine
    restart: always
    ports:
      - '6379:6379'  # Expose Redis port
    environment:
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    volumes:
      - redis-data:/data  # Persist Redis data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local